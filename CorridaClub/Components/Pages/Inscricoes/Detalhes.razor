@page "/inscricoes/detalhes/{id:int}"
@using CorridaClub.Controllers
@using CorridaClub.Models
@inject InscricaoController InscricaoController
@inject NavigationManager Navigation

<h3 class="mb-4">Detalhes da Inscrição</h3>

@if (carregando)
{
    <div class="text-center">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Carregando...</span>
        </div>
        <p class="mt-2">Carregando inscrição...</p>
    </div>
}
else if (inscricao == null)
{
    <div class="alert alert-danger">
        <i class="fas fa-exclamation-triangle mr-2"></i> Inscrição não encontrada!
    </div>
}
else
{
    <div class="card shadow">
        <div class="card-body">
            <h5 class="card-title text-primary mb-4">
                <i class="fas fa-file-alt mr-2"></i> Inscrição #@inscricao.Id
            </h5>
            
            <div class="row">
                <div class="col-md-6">
                    <p class="card-text"><strong><i class="fas fa-calendar-alt mr-2"></i> Evento:</strong> @inscricao.Evento?.Nome</p>
                    <p class="card-text"><strong><i class="fas fa-user mr-2"></i> Participante:</strong> @inscricao.Usuario?.Nome</p>
                    <p class="card-text"><strong><i class="fas fa-envelope mr-2"></i> Email:</strong> @inscricao.Usuario?.Email</p>
                </div>
                <div class="col-md-6">
                    <p class="card-text"><strong><i class="fas fa-calendar-day mr-2"></i> Data Inscrição:</strong> @inscricao.DataInscricao?.ToString("dd/MM/yyyy HH:mm")</p>
                    <p class="card-text"><strong><i class="fas fa-info-circle mr-2"></i> Status:</strong> 
                        <span class="badge @GetBadgeClass(inscricao.Status)">
                            @GetStatusText(inscricao.Status)
                        </span>
                    </p>
                    <p class="card-text"><strong><i class="fas fa-tshirt mr-2"></i> Camiseta:</strong> @inscricao.TamanhoCamiseta</p>
                </div>
            </div>

            <div class="mt-4 d-flex">
                <button @onclick="(() => CancelarInscricao(inscricao.Id))" 
                        class="btn btn-danger mr-2"
                        disabled="@(inscricao.Status == "Cancelada")">
                    <i class="fas fa-ban mr-1"></i> @(inscricao.Status == "Cancelada" ? "Inscrição Cancelada" : "Cancelar Inscrição")
                </button>
                <a href="/inscricoes" class="btn btn-secondary">
                    <i class="fas fa-arrow-left mr-1"></i> Voltar
                </a>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Inscricao? inscricao;
    private bool carregando = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            inscricao = await InscricaoController.ObterInscricaoCompleta(Id);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao carregar inscrição: {ex.Message}");
        }
        finally
        {
            carregando = false;
        }
    }

    private async Task CancelarInscricao(int id)
    {
        try
        {
            await InscricaoController.CancelarInscricao(id);
            // Atualiza os dados após cancelamento
            inscricao = await InscricaoController.ObterInscricaoCompleta(Id);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao cancelar inscrição: {ex.Message}");
        }
    }

    private string GetBadgeClass(string status)
    {
        return status switch
        {
            "Confirmada" => "badge bg-success",
            "Cancelada" => "badge bg-danger",
            "Pendente" => "badge bg-warning",
            _ => "badge bg-secondary"
        };
    }

    private string GetStatusText(string status)
    {
        return status switch
        {
            "Confirmada" => "CONFIRMADA",
            "Cancelada" => "CANCELADA",
            "Pendente" => "PENDENTE",
            _ => status?.ToUpper() ?? "INDEFINIDO"
        };
    }
}