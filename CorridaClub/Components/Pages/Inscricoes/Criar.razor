@page "/inscricoes/criar"
@using CorridaClub.Controllers
@using CorridaClub.Models
@inject InscricaoController InscricaoController
@inject EventoController EventoController
@inject UsuarioController UsuarioController
@inject NavigationManager Navigation

<h3>Nova Inscrição</h3>

@if (eventos == null || usuarios == null)
{
    <p>Carregando dados...</p>
}
else
{
    <EditForm Model="@novaInscricao" OnValidSubmit="@SalvarInscricao">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="eventoId">Evento:</label>
            <InputSelect id="eventoId" class="form-control" @bind-Value="novaInscricao.EventoId">
                <option value="">Selecione um evento</option>
                @foreach (var evento in eventos)
                {
                    <option value="@evento.Id">@evento.Nome (@evento.Data?.ToString("dd/MM/yyyy"))</option>
                }
            </InputSelect>
        </div>

        <div class="form-group">
            <label for="usuarioId">Participante:</label>
            <InputSelect id="usuarioId" class="form-control" @bind-Value="novaInscricao.UsuarioId">
                <option value="">Selecione um participante</option>
                @foreach (var usuario in usuarios)
                {
                    <option value="@usuario.Id">@usuario.Nome (@usuario.Email)</option>
                }
            </InputSelect>
        </div>

        <div class="form-group">
            <label for="tamanhoCamiseta">Tamanho da Camiseta:</label>
            <InputSelect id="tamanhoCamiseta" class="form-control" @bind-Value="novaInscricao.TamanhoCamiseta">
                <option value="P">P</option>
                <option value="M">M</option>
                <option value="G">G</option>
                <option value="GG">GG</option>
            </InputSelect>
        </div>

        <button type="submit" class="btn btn-primary">Salvar</button>
        <a href="/inscricoes" class="btn btn-secondary">Cancelar</a>
    </EditForm>
}

@code {
    private List<Evento> eventos = new();
    private List<Usuario> usuarios = new();
    private Inscricao novaInscricao = new();

    protected override async Task OnInitializedAsync()
    {
        eventos = await EventoController.ListarProximosEventos();
        usuarios = await UsuarioController.ListarUsuarios();
    }

    private async Task SalvarInscricao()
    {
        novaInscricao.DataInscricao = DateTime.Now;
        novaInscricao.Status = "Confirmada";
        await InscricaoController.Inscrever(novaInscricao);
        Navigation.NavigateTo("/inscricoes");
    }
}