@page "/usuarios/editar/{id:int}"
@using CorridaClub.Controllers
@using CorridaClub.Models
@inject UsuarioController UsuarioController
@inject NavigationManager Navigation

<h3>Editar Usuário</h3>

@if (usuario == null)
{
    <p>Carregando usuário...</p>
}
else
{
    <EditForm Model="@usuario" OnValidSubmit="@AtualizarUsuario">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="nome">Nome:</label>
            <InputText id="nome" class="form-control" @bind-Value="usuario.Nome" />
        </div>

        <div class="form-group">
            <label for="email">Email:</label>
            <InputText id="email" class="form-control" @bind-Value="usuario.Email" />
        </div>

        <div class="form-group">
            <label for="tipo">Tipo de Membro:</label>
            <InputSelect id="tipo" class="form-control" @bind-Value="usuario.TipoMembro">
                <option value="Atleta">Atleta</option>
                <option value="Organizador">Organizador</option>
                <option value="Admin">Administrador</option>
            </InputSelect>
        </div>

        <button type="submit" class="btn btn-primary">Atualizar</button>
        <a href="/usuarios" class="btn btn-secondary">Cancelar</a>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Usuario usuario = new();

    protected override async Task OnInitializedAsync()
    {
        usuario = await UsuarioController.ObterPorId(Id) ?? new Usuario();
    }

    private async Task AtualizarUsuario()
    {
        await UsuarioController.Atualizar(usuario);
        Navigation.NavigateTo("/usuarios");
    }
}