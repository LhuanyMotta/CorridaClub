@page "/pedidos/criar"
@using CorridaClub.Controllers
@using CorridaClub.Models
@inject PedidoController PedidoController
@inject UsuarioController UsuarioController
@inject NavigationManager Navigation

<h3>Novo Pedido</h3>

<EditForm Model="@novoPedido" OnValidSubmit="@SalvarPedido">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="usuarioId">Cliente:</label>
        <InputSelect id="usuarioId" class="form-control" @bind-Value="novoPedido.UsuarioId">
            <option value="">Selecione um cliente</option>
            @foreach (var usuario in usuarios)
            {
                <option value="@usuario.Id">@usuario.Nome (@usuario.Email)</option>
            }
        </InputSelect>
    </div>

    <div class="form-group">
        <label for="item">Item:</label>
        <InputSelect id="item" class="form-control" @bind-Value="novoPedido.Item">
            <option value="Camiseta">Camiseta</option>
            <option value="Tênis">Tênis</option>
            <option value="Medalha">Medalha</option>
            <option value="Kit Corrida">Kit Corrida</option>
        </InputSelect>
    </div>

    <div class="form-group">
        <label for="tamanho">Tamanho:</label>
        <InputSelect id="tamanho" class="form-control" @bind-Value="novoPedido.Tamanho">
            <option value="P">P</option>
            <option value="M">M</option>
            <option value="G">G</option>
            <option value="GG">GG</option>
        </InputSelect>
    </div>

    <div class="form-group">
        <label for="quantidade">Quantidade:</label>
        <InputNumber id="quantidade" class="form-control" @bind-Value="novoPedido.Quantidade" min="1" />
    </div>

    <button type="submit" class="btn btn-primary">Salvar</button>
    <a href="/pedidos" class="btn btn-secondary">Cancelar</a>
</EditForm>

@code {
    private List<Usuario> usuarios = new();
    private Pedido novoPedido = new()
    {
        DataPedido = DateTime.Now,
        Status = "Pendente"
    };

    protected override async Task OnInitializedAsync()
    {
        usuarios = await UsuarioController.ListarUsuarios();
    }

    private async Task SalvarPedido()
    {
        await PedidoController.AdicionarPedido(novoPedido);
        Navigation.NavigateTo("/pedidos");
    }
}